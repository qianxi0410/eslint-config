// eslint-disable-next-line unicorn/prefer-module
module.exports = {
  extends: [
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    '@qianxi0410/eslint-config-ts',
  ],
  plugins: ['react', 'react-hooks'],
  env: {
    browser: true,
    node: true,
    jasmine: true,
    jest: true,
    es2022: true,
  },
  globals: {
    React: true,
    ReactDOM: true,
  },
  settings: {
    react: {
      version: 'detect',
    },
  },
  rules: {
    'react/boolean-prop-naming': ['error',
      {
        propTypeNames: ['bool', 'mutuallyExclusiveTrueProps'],
      },
    ],
    'react/button-has-type': ['error', { button: true, submit: true, reset: false }],
    'react/default-props-match-prop-types': 'off',
    'react/destructuring-assignment': ['error', 'always'],
    'react/display-name': ['off'],
    'react/function-component-definition': ['error', { namedComponents: 'arrow-function' }],
    'react/self-closing-comp': ['error', { component: true, html: true }],
    'react/prefer-read-only-props': 'error',
    'react/no-unknown-property': 'error',

    'react/react-in-jsx-scope': 'off',
    'react/jsx-filename-extension': 'error',
    'react/jsx-one-expression-per-line': 'off',
    'react/prop-types': 'off',
    'react/forbid-prop-types': 'off',
    'react/jsx-indent': 'off',
    'react/jsx-wrap-multilines': [
      'error',
      { declaration: false, assignment: false },
    ],
    'react/state-in-constructor': 'off',
    'react/jsx-props-no-spreading': 'off',
    'react/require-default-props': 'off',
    'react/static-property-placement': 'off',
    'react/no-find-dom-node': 'off',
    'react/no-unused-prop-types': 'off',

    'react-hooks/rules-of-hooks': 'error',

    'jsx-quotes': ['error', 'prefer-double'],
    'jsx-a11y/no-static-element-interactions': 'off',
    'jsx-a11y/anchor-has-content': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/no-noninteractive-element-interactions': 'off',
    'jsx-a11y/label-has-for': 'off',

    'react/sort-comp': ['error', {
      order: [
        'static-methods',
        'lifecycle',
        'everything-else',
        'render',
      ],
      groups: {
        lifecycle: [
          'displayName',
          'propTypes',
          'contextTypes',
          'childContextTypes',
          'mixins',
          'statics',
          'defaultProps',
          'constructor',
          'getDefaultProps',
          'state',
          'getInitialState',
          'getChildContext',
          'getDerivedStateFromProps',
          'componentWillMount',
          'UNSAFE_componentWillMount',
          'componentDidMount',
          'componentWillReceiveProps',
          'UNSAFE_componentWillReceiveProps',
          'shouldComponentUpdate',
          'componentWillUpdate',
          'UNSAFE_componentWillUpdate',
          'getSnapshotBeforeUpdate',
          'componentDidUpdate',
          'componentDidCatch',
          'componentWillUnmount',
        ],
      },
    }],
  },
}
